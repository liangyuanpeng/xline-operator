/*
Kubernetes

Testing AutoscalingV1ApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_AutoscalingV1ApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AutoscalingV1ApiService CreateAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.CreateAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.DeleteAutoscalingV1CollectionNamespacedHorizontalPodAutoscaler(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService DeleteAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.DeleteAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService GetAutoscalingV1APIResources", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AutoscalingV1Api.GetAutoscalingV1APIResources(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService ListAutoscalingV1HorizontalPodAutoscalerForAllNamespaces", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AutoscalingV1Api.ListAutoscalingV1HorizontalPodAutoscalerForAllNamespaces(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService ListAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.ListAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService PatchAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.PatchAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.PatchAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService ReadAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.ReadAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.ReadAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService ReplaceAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.ReplaceAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.ReplaceAutoscalingV1NamespacedHorizontalPodAutoscalerStatus(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AutoscalingV1Api.WatchAutoscalingV1HorizontalPodAutoscalerListForAllNamespaces(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService WatchAutoscalingV1NamespacedHorizontalPodAutoscaler", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var name string
		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.WatchAutoscalingV1NamespacedHorizontalPodAutoscaler(context.Background(), name, namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AutoscalingV1ApiService WatchAutoscalingV1NamespacedHorizontalPodAutoscalerList", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var namespace string

		resp, httpRes, err := apiClient.AutoscalingV1Api.WatchAutoscalingV1NamespacedHorizontalPodAutoscalerList(context.Background(), namespace).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
